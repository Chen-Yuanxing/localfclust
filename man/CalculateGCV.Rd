% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gcv_function.R
\name{CalculateGCV}
\alias{CalculateGCV}
\title{Calculate GCV values from a series of candidate lambda1}
\usage{
CalculateGCV(
  times,
  oridata,
  rangeval = c(0, 1),
  nknots = 30,
  order = 4,
  nu = 2,
  lambda1_seq
)
}
\arguments{
\item{times}{A list with n elements, each of which contains a sequence of time points.}

\item{oridata}{A list with n elements, each of wich contains a sequence of observations corresponding to the times.}

\item{rangeval}{A numeric vector of length 2 defining the interval over which the functional data object can be evaluated; default value is c(0,1).}

\item{nknots}{An integer specifying the number of equally spaced knots; default value is 30.}

\item{order}{An integer specifying the order of B-splines, which is one higher than their degree. The default of 4 gives cubic splines.}

\item{nu}{A non-negative integer defining an order of a derivative. The default of 2 corresponds to measuring the roughness of a function by its integrated curvature.}

\item{lambda1_seq}{A sequence of candidate tuning parameters for roughness of estimated functions.}
}
\description{
\code{CalculateGCV} selects the optimal lambda1 by minimizing GCV.
}
